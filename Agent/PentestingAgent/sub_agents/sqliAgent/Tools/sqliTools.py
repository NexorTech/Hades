import requests
from .utils.sqlIperform import test_sqli_get
from .utils.queryFinder import smart_query_param_finder
import requests

def DoSqlITestWithoutParam(target_url:str) -> dict:
    print(f"target_url: {target_url}")
    params = smart_query_param_finder(target_url)
    foundList = []
    for param in params:
        found = test_sqli_get(target_url, param)
        foundList.append(found)
    
    for payload in foundList:
        if payload != None:
            return {
            'result' : "SQLi found with: {payload}",
            'param' : param
            }
    return {
                'result' : "No SQLi detected",
                'param' : params
            }

def DoSqlITestWithParams(target_url:str, param:str) -> dict:
    print(f"target_url: {target_url}")
    foundList = []
    found = test_sqli_get(target_url, param)
    foundList.append(found)
    
    for payload in foundList:
        if payload != None:
            return {
            'result' : "SQLi found with: {payload}",
            'param' : param
            }
        return {
            'result' : "No SQLi detected",
            'param' : param
        }
